@function calc-gradient-positions($pos) {
  $type: type-of(nth($pos, 1));
  $spec: null;
  $degree: null;
  $side: null;
  $corner: null;
  $length: length($pos);

  // Parse Side and corner positions
  @if ($length > 1) {
    @if nth($pos, 1) == "to" {
      $side: nth($pos, 2);

      @if $length == 2 {
        // Swap for backwards compatability
        $degree: _flip-position(nth($pos, 2));
      }
      @else if $length == 3 {
        $corner: nth($pos, 3);
      }
      @if ("#{$side} #{$corner}" == "left top") or ("#{$side} #{$corner}" == "top left") {
        $degree: 135deg;
      }
      @else if ("#{$side} #{$corner}" == "right top") or ("#{$side} #{$corner}" == "top right") {
        $degree: 45deg;
      }
      @else if ("#{$side} #{$corner}" == "right bottom") or ("#{$side} #{$corner}" == "bottom right") {
        $degree: -45deg;
      }
      @else if ("#{$side} #{$corner}" == "left bottom") or ("#{$side} #{$corner}" == "bottom left") {
        $degree: -135deg;
      }
    }
    @else {
      @warn "Incorrect gradient syntax";
    }
    $spec: to $side $corner;
  }

  @else if $length == 1 {
    // Swap for backwards compatability
    @if $type == string {
      $degree: $pos;
      $spec: to _flip-position($pos);
    }
    @else {
      $degree: -270 - $pos; //rotate the gradient opposite from spec
      $spec: $pos;
    }
  }
  @return $degree $spec;
}
